"""Initial migration

Revision ID: aecb16a637f8
Revises: 
Create Date: 2025-01-09 20:48:24.033747

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geography

# revision identifiers, used by Alembic.
revision: str = "aecb16a637f8"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "activities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["parent_id"], ["activities.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_activities_id"), "activities", ["id"], unique=False)
    op.create_index(op.f("ix_activities_name"), "activities", ["name"], unique=False)
    op.create_index(
        op.f("ix_activities_parent_id"), "activities", ["parent_id"], unique=False
    )
    op.create_table(
        "buildings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column(
            "location",
            Geography(
                geometry_type="POINT",
                srid=4326,
                from_text="ST_GeogFromText",
                name="geography",
                nullable=False,
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # S.M. 2025-01-09 - to avoid errors with GeoAlchemy2
    # op.create_index('idx_buildings_location', 'buildings', ['location'], unique=False, postgresql_using='gist')

    op.create_index(op.f("ix_buildings_id"), "buildings", ["id"], unique=False)
    op.create_table(
        "organizations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("building_id", sa.Integer(), nullable=False),
        sa.Column("phones", sa.ARRAY(sa.String(length=20)), nullable=True),
        sa.ForeignKeyConstraint(["building_id"], ["buildings.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_organizations_building_id"),
        "organizations",
        ["building_id"],
        unique=False,
    )
    op.create_index(op.f("ix_organizations_id"), "organizations", ["id"], unique=False)
    op.create_table(
        "buildings_organizations",
        sa.Column("building_id", sa.Integer(), nullable=False),
        sa.Column("organization_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["building_id"],
            ["buildings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("building_id", "organization_id"),
    )
    op.create_table(
        "organizations_activities",
        sa.Column("organization_id", sa.Integer(), nullable=False),
        sa.Column("activity_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["activities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("organization_id", "activity_id"),
    )
    op.create_index(
        op.f("ix_organizations_activities_activity_id"),
        "organizations_activities",
        ["activity_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_organizations_activities_organization_id"),
        "organizations_activities",
        ["organization_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_organizations_activities_organization_id"),
        table_name="organizations_activities",
    )
    op.drop_index(
        op.f("ix_organizations_activities_activity_id"),
        table_name="organizations_activities",
    )
    op.drop_table("organizations_activities")
    op.drop_table("buildings_organizations")
    op.drop_index(op.f("ix_organizations_id"), table_name="organizations")
    op.drop_index(op.f("ix_organizations_building_id"), table_name="organizations")
    op.drop_table("organizations")
    op.drop_index(op.f("ix_buildings_id"), table_name="buildings")

    # S.M. 2025-01-09 - to avoid errors with GeoAlchemy2
    # op.drop_index('idx_buildings_location', table_name='buildings', postgresql_using='gist')

    op.drop_table("buildings")
    op.drop_index(op.f("ix_activities_parent_id"), table_name="activities")
    op.drop_index(op.f("ix_activities_name"), table_name="activities")
    op.drop_index(op.f("ix_activities_id"), table_name="activities")
    op.drop_table("activities")
    # ### end Alembic commands ###
